#Generated by VisualGDB project wizard. 
#Note: VisualGDB will automatically update this file when you add new sources to the project.
#All other changes you make in this file will be preserved.
#Visit http://visualgdb.com/makefiles for more details

#VisualGDB: AutoSourceFiles		#<--- remove this line to disable auto-updating of SOURCEFILES and EXTERNAL_LIBS
SOURCEFILES := src/Database.cpp src/fastcgi/fcgiapp.c src/fastcgi/os_unix.c src/fastcgi/os_win32.c src/FileSystem.cpp src/Gallery.cpp src/Gif.cpp src/gif/dgif_lib.c src/gif/egif_lib.c src/gif/gifalloc.c src/gif/gif_err.c src/gif/gif_font.c src/gif/gif_hash.c src/gif/quantize.c src/Image.cpp src/Internal.cpp src/main.cpp src/Platform.cpp src/pngnq/neuquant32.c src/RamSession.cpp src/Serializer.cpp src/Server.cpp src/Logging.cpp src/Parameters.cpp src/Session.cpp src/sqlite/sqlite3.c

TARGETNAME := gallery
#TARGETTYPE can be APP, STATIC or SHARED
TARGETTYPE := APP

to_lowercase = $(subst A,a,$(subst B,b,$(subst C,c,$(subst D,d,$(subst E,e,$(subst F,f,$(subst G,g,$(subst H,h,$(subst I,i,$(subst J,j,$(subst K,k,$(subst L,l,$(subst M,m,$(subst N,n,$(subst O,o,$(subst P,p,$(subst Q,q,$(subst R,r,$(subst S,s,$(subst T,t,$(subst U,u,$(subst V,v,$(subst W,w,$(subst X,x,$(subst Y,y,$(subst Z,z,$1))))))))))))))))))))))))))

CONFIG ?= DEBUG

CONFIGURATION_FLAGS_FILE := $(call to_lowercase,$(CONFIG)).mak

include $(CONFIGURATION_FLAGS_FILE)
include $(ADDITIONAL_MAKE_FILES)

ifeq ($(BINARYDIR),)
error:
	$(error Invalid configuration, please check your inputs)
endif

EXTERNAL_LIBS := ext/ctemplate/$(BINARYDIR)/ctemplate.a ext/mysql/dbug/$(BINARYDIR)/dbug.a ext/libjpeg/$(BINARYDIR)/libjpeg.a ext/mysql/mysys_ssl/$(BINARYDIR)/mysys_ssl.a ext/zlib/$(BINARYDIR)/zlib.a ext/mysql/taocrypt/$(BINARYDIR)/taocrypt.a ext/mysql/yassl/$(BINARYDIR)/yassl.a ext/lpng/$(BINARYDIR)/lpng.a ext/cryptopp/$(BINARYDIR)/cryptlib.a ext/mysql/regex/$(BINARYDIR)/regex.a ext/mysql/strings/$(BINARYDIR)/strings.a ext/mysql/mysys/$(BINARYDIR)/mysys.a ext/mysql/libmysql/$(BINARYDIR)/clientlib.a ext/mysql/vio/$(BINARYDIR)/vio.a ext/tbb/$(BINARYDIR)/tbb.a
EXTERNAL_LIBS_COPIED := $(foreach lib, $(EXTERNAL_LIBS),$(BINARYDIR)/$(notdir $(lib)))

CFLAGS += $(COMMONFLAGS)
CXXFLAGS += $(COMMONFLAGS)
ASFLAGS += $(COMMONFLAGS)
LDFLAGS += $(COMMONFLAGS)

CFLAGS += $(addprefix -I,$(INCLUDE_DIRS))
CXXFLAGS += $(addprefix -I,$(INCLUDE_DIRS))

CFLAGS += $(addprefix -D,$(PREPROCESSOR_MACROS))
CXXFLAGS += $(addprefix -D,$(PREPROCESSOR_MACROS))
ASFLAGS += $(addprefix -D,$(PREPROCESSOR_MACROS))

CXXFLAGS += $(addprefix -framework ,$(MACOS_FRAMEWORKS))
CFLAGS += $(addprefix -framework ,$(MACOS_FRAMEWORKS))
LDFLAGS += $(addprefix -framework ,$(MACOS_FRAMEWORKS))

LDFLAGS += $(addprefix -L,$(LIBRARY_DIRS))

LIBRARY_LDFLAGS = $(addprefix -l,$(LIBRARY_NAMES))

ifeq ($(IS_LINUX_PROJECT),1)
	RPATH_PREFIX := -Wl,--rpath='$$ORIGIN/../
	LIBRARY_LDFLAGS += $(EXTERNAL_LIBS)
	LIBRARY_LDFLAGS += -Wl,--rpath='$$ORIGIN'
	LIBRARY_LDFLAGS += $(addsuffix ',$(addprefix $(RPATH_PREFIX),$(dir $(EXTERNAL_LIBS))))
	
	ifeq ($(TARGETTYPE),SHARED)
		LIBRARY_LDFLAGS += -Wl,-soname,$(TARGETNAME)
	endif
	
else
	LIBRARY_LDFLAGS += $(EXTERNAL_LIBS)
endif

all_make_files := Makefile $(CONFIGURATION_FLAGS_FILE) $(ADDITIONAL_MAKE_FILES)

ifeq ($(STARTUPFILES),)
	all_source_files := $(SOURCEFILES)
else
	all_source_files := $(STARTUPFILES) $(filter-out $(STARTUPFILES),$(SOURCEFILES))
endif

source_obj1 := $(all_source_files:.cpp=.o)
source_obj2 := $(source_obj1:.c=.o)
source_objs := $(source_obj2:.S=.o)

all_objs := $(addprefix $(BINARYDIR)/, $(notdir $(source_objs)))

ifeq ($(GENERATE_BIN_FILE),1)
all: $(BINARYDIR)/$(basename $(TARGETNAME)).bin

$(BINARYDIR)/$(basename $(TARGETNAME)).bin: $(BINARYDIR)/$(TARGETNAME)
	$(OBJCOPY) -O binary $< $@

else
all: $(BINARYDIR)/$(TARGETNAME)
endif

ifeq ($(TARGETTYPE),APP)
$(BINARYDIR)/$(TARGETNAME): $(all_objs) $(EXTERNAL_LIBS)
	$(LD) -o $@ $(LDFLAGS) $(START_GROUP) $(all_objs) $(LIBRARY_LDFLAGS) $(END_GROUP)
endif

ifeq ($(TARGETTYPE),SHARED)
$(BINARYDIR)/$(TARGETNAME): $(all_objs) $(EXTERNAL_LIBS)
	$(LD) -shared -o $@ $(LDFLAGS) $(START_GROUP) $(all_objs) $(LIBRARY_LDFLAGS) $(END_GROUP)
endif
	
ifeq ($(TARGETTYPE),STATIC)
$(BINARYDIR)/$(TARGETNAME): $(all_objs)
	$(AR) -r $@ $^
endif

-include $(all_objs:.o=.dep)

clean:
ifeq ($(USE_DEL_TO_CLEAN),1)
	del /S /Q $(BINARYDIR)
else
	rm -rf $(BINARYDIR)
endif

$(BINARYDIR):
	mkdir $(BINARYDIR)

#VisualGDB: FileSpecificTemplates		#<--- VisualGDB will use the following lines to define rules for source files in subdirectories
$(BINARYDIR)/%.o : %.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)

$(BINARYDIR)/%.o : %.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)

$(BINARYDIR)/%.o : %.S $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) $(ASFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)

#VisualGDB: GeneratedRules				#<--- All lines below are auto-generated


$(BINARYDIR)/Database.o : src/Database.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/fcgiapp.o : src/fastcgi/fcgiapp.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/os_unix.o : src/fastcgi/os_unix.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/os_win32.o : src/fastcgi/os_win32.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/FileSystem.o : src/FileSystem.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Gallery.o : src/Gallery.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Gif.o : src/Gif.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/dgif_lib.o : src/gif/dgif_lib.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/egif_lib.o : src/gif/egif_lib.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/gifalloc.o : src/gif/gifalloc.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/gif_err.o : src/gif/gif_err.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/gif_font.o : src/gif/gif_font.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/gif_hash.o : src/gif/gif_hash.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/quantize.o : src/gif/quantize.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Image.o : src/Image.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Internal.o : src/Internal.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/main.o : src/main.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Platform.o : src/Platform.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/neuquant32.o : src/pngnq/neuquant32.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/RamSession.o : src/RamSession.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Serializer.o : src/Serializer.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Server.o : src/Server.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Logging.o : src/Logging.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Parameters.o : src/Parameters.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/Session.o : src/Session.cpp $(all_make_files) |$(BINARYDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)


$(BINARYDIR)/sqlite3.o : src/sqlite/sqlite3.c $(all_make_files) |$(BINARYDIR)
	$(CC) $(CFLAGS) -c $< -o $@ -MD -MF $(@:.o=.dep)

$(BINARYDIR)/ctemplate.a : ext/ctemplate/$(BINARYDIR)/ctemplate.a
	$(CP) ext/ctemplate/$(BINARYDIR)/ctemplate.a $(BINARYDIR)/ctemplate.a

$(BINARYDIR)/dbug.a : ext/mysql/dbug/$(BINARYDIR)/dbug.a
	$(CP) ext/mysql/dbug/$(BINARYDIR)/dbug.a $(BINARYDIR)/dbug.a

$(BINARYDIR)/libjpeg.a : ext/libjpeg/$(BINARYDIR)/libjpeg.a
	$(CP) ext/libjpeg/$(BINARYDIR)/libjpeg.a $(BINARYDIR)/libjpeg.a

$(BINARYDIR)/mysys_ssl.a : ext/mysql/mysys_ssl/$(BINARYDIR)/mysys_ssl.a
	$(CP) ext/mysql/mysys_ssl/$(BINARYDIR)/mysys_ssl.a $(BINARYDIR)/mysys_ssl.a

$(BINARYDIR)/zlib.a : ext/zlib/$(BINARYDIR)/zlib.a
	$(CP) ext/zlib/$(BINARYDIR)/zlib.a $(BINARYDIR)/zlib.a

$(BINARYDIR)/taocrypt.a : ext/mysql/taocrypt/$(BINARYDIR)/taocrypt.a
	$(CP) ext/mysql/taocrypt/$(BINARYDIR)/taocrypt.a $(BINARYDIR)/taocrypt.a

$(BINARYDIR)/yassl.a : ext/mysql/yassl/$(BINARYDIR)/yassl.a
	$(CP) ext/mysql/yassl/$(BINARYDIR)/yassl.a $(BINARYDIR)/yassl.a

$(BINARYDIR)/lpng.a : ext/lpng/$(BINARYDIR)/lpng.a
	$(CP) ext/lpng/$(BINARYDIR)/lpng.a $(BINARYDIR)/lpng.a

$(BINARYDIR)/cryptlib.a : ext/cryptopp/$(BINARYDIR)/cryptlib.a
	$(CP) ext/cryptopp/$(BINARYDIR)/cryptlib.a $(BINARYDIR)/cryptlib.a

$(BINARYDIR)/regex.a : ext/mysql/regex/$(BINARYDIR)/regex.a
	$(CP) ext/mysql/regex/$(BINARYDIR)/regex.a $(BINARYDIR)/regex.a

$(BINARYDIR)/strings.a : ext/mysql/strings/$(BINARYDIR)/strings.a
	$(CP) ext/mysql/strings/$(BINARYDIR)/strings.a $(BINARYDIR)/strings.a

$(BINARYDIR)/mysys.a : ext/mysql/mysys/$(BINARYDIR)/mysys.a
	$(CP) ext/mysql/mysys/$(BINARYDIR)/mysys.a $(BINARYDIR)/mysys.a

$(BINARYDIR)/clientlib.a : ext/mysql/libmysql/$(BINARYDIR)/clientlib.a
	$(CP) ext/mysql/libmysql/$(BINARYDIR)/clientlib.a $(BINARYDIR)/clientlib.a

$(BINARYDIR)/vio.a : ext/mysql/vio/$(BINARYDIR)/vio.a
	$(CP) ext/mysql/vio/$(BINARYDIR)/vio.a $(BINARYDIR)/vio.a

$(BINARYDIR)/tbb.a : ext/tbb/$(BINARYDIR)/tbb.a
	$(CP) ext/tbb/$(BINARYDIR)/tbb.a $(BINARYDIR)/tbb.a

